// Place your key bindings in this file to overwrite the defaults
[
    {
        "key": "cmd+s",
        "command": "workbench.action.files.saveAll"
    },
    {
        "key": "alt+cmd+s",
        "command": "-workbench.action.files.saveAll"
    },
    {
        "key": "cmd+up",
        "command": "workbench.files.action.collapseExplorerFolders",
        "when": "listFocus"
    },
    {
        "key": "cmd+up",
        "command": "-list.collapse",
        "when": "listFocus"
    },
    {
        "key": "alt+cmd+2",
        "command": "workbench.action.minimizeOtherEditors"
    },
    {
        "key": "shift+alt+r",
        "command": "editor.action.referenceSearch.trigger",
        "when": "editorHasReferenceProvider && editorTextFocus && !inReferenceSearchEditor && !isInEmbeddedEditor"
    },
    {
        "key": "shift+f12",
        "command": "-editor.action.referenceSearch.trigger",
        "when": "editorHasReferenceProvider && editorTextFocus && !inReferenceSearchEditor && !isInEmbeddedEditor"
    },
    {
        "key": "cmd+r cmd+r",
        "command": "editor.action.rename",
        "when": "editorHasRenameProvider && editorTextFocus && !editorReadonly"
    },
    {
        "key": "f2",
        "command": "-editor.action.rename",
        "when": "editorHasRenameProvider && editorTextFocus && !editorReadonly"
    },
    {
        "key": "shift+cmd+n",
        "command": "explorer.newFolder",
        "when": "explorerViewletFocus"
    },
    {
        "key": "cmd+n",
        "command": "explorer.newFile",
        "when": "explorerViewletFocus"
    },
    {
        "key": "ctrl+p",
        "command": "-list.focusUp",
        "when": "listFocus && !inputFocus"
    },
    {
        "key": "shift+alt+3",
        "command": "workbench.action.togglePanelPosition"
    },
    {
        "key": "cmd+j",
        "command": "workbench.action.terminal.toggleTerminal"
    },
    {
        "key": "ctrl+shift+[Equal]",
        "command": "-workbench.action.terminal.toggleTerminal"
    },
    {
        "key": "cmd+4",
        "command": "workbench.action.terminal.focus"
    },
    {
        "key": "cmd+t",
        "command": "workbench.action.terminal.new",
        "when": "terminalFocus"
    },
    {
        "key": "alt+cmd+right",
        "command": "workbench.action.terminal.focusNext",
        "when": "terminalFocus"
    },
    {
        "key": "alt+cmd+left",
        "command": "workbench.action.terminal.focusPrevious",
        "when": "terminalFocus"
    },
    {
        "key": "cmd+w",
        "command": "workbench.action.terminal.kill",
        "when": "terminalFocus"
    },
    {
        "key": "cmd+e cmd+w",
        "command": "editor.emmet.action.wrapIndividualLinesWithAbbreviation"
    },
    {
        "key": "alt+c r",
        "command": "clojureVSCode.startNRepl"
    },
    {
        "key": "alt+c e",
        "command": "clojureVSCode.evalAndShowResult"
    },
    {
        "key": "alt+c alt+r",
        "command": "clojureVSCode.manuallyConnectToNRepl"
    },
    {
        "key": "alt+c alt+e",
        "command": "clojureVSCode.eval"
    },
    {
        "key": "shift+alt+d",
        "command": "editor.action.goToDeclaration",
        "when": "editorHasDefinitionProvider && editorTextFocus && !isInEmbeddedEditor"
    },
    {
        "key": "f12",
        "command": "-editor.action.goToDeclaration",
        "when": "editorHasDefinitionProvider && editorTextFocus && !isInEmbeddedEditor"
    },
    {
        "key": "shift+alt+e",
        "command": "editor.action.smartSelect.expand",
        "when": "editorTextFocus"
    },
    {
        "key": "ctrl+shift+cmd+right",
        "command": "-editor.action.smartSelect.expand",
        "when": "editorTextFocus"
    },
    {
        "key": "shift+alt+s",
        "command": "editor.action.smartSelect.shrink",
        "when": "editorTextFocus"
    },
    {
        "key": "ctrl+shift+cmd+left",
        "command": "-editor.action.smartSelect.shrink",
        "when": "editorTextFocus"
    },
    {
        "key": "ctrl+r",
        "command": "-extension.vim_ctrl+r",
        "when": "editorTextFocus && vim.active && vim.use<C-r> && !inDebugRepl"
    },
    {
        "key": "ctrl+w",
        "command": "-extension.vim_ctrl+w",
        "when": "editorTextFocus && vim.active && vim.use<C-w> && !inDebugRepl"
    },
    {
        "key": "alt+cmd+1",
        "command": "workbench.action.toggleMaximizedPanel"
    },
    {
        "key": "cmd+r cmd+t",
        "command": "java.test.explorer.runAll"
    },
    {
        "key": "alt+cmd+5",
        "command": "workbench.action.positionPanelRight"
    },
    {
        "key": "alt+cmd+4",
        "command": "workbench.action.positionPanelBottom"
    },
    {
        "key": "alt+cmd+3",
        "command": "workbench.action.positionPanelLeft"
    }
]